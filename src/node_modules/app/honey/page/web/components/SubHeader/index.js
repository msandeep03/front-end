import React, {Component} from 'react';
import {Grid, Hidden, ButtonBase, Button} from '@material-ui/core';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import compose from 'recompose/compose'
import {withStateHandlers} from 'recompose'
import styled from 'styled-components';
import {rem} from 'polished'
import {mediaGrid} from '../../customUI'
import defaultProps from 'recompose/defaultProps'
import posed from 'react-pose';
import {IconMenu, IconLogo, IconCart} from '../../icons'
import {Clear} from '@material-ui/icons';
import BurgerMenu          from '../BurgerMenu'

const ButtonMenu = styled.div`
&& {
  display: block;
  font-size: ${rem(14)};
  padding-top: ${rem(4)};
  font-weight: 700;
  text-transform: uppercase;  
  color: #000000;
  cursor: pointer;
  &:hover {
    color: rgba(0, 0, 0, 0.7);
    text-decoration: underline;
  }
}
`;

const Root = styled.div`
&& {
  position: relative;
 }
`;


const GridCustom = styled(({ background, margin, ...other }) => (
  <Grid {...other} />
))`
&& {
  position: relative;
  height: ${rem(72)};
  background: #ffffff;
  z-index: 1000;
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
}
`;


const IconLogoWrap = styled.div`
&& {
  margin-top: -98px; 
  text-align: left;

  ${mediaGrid(`sm`)}{//phone
    text-align: center;
  }
}
`


const enhance = compose(
  
  defaultProps({
  }),

  withStateHandlers(
    () => ({
      showMenu: false,
    }),
    {
      toggleMenu: ({ showMenu }) => () => ({
        showMenu: !showMenu
      }),
    }
  ),
    
)

const ContainerIcon = styled(
  posed.div({
    show: {
      opacity: 1,
    },
    hide: {
      opacity: 0,
    }
  })
)`

&& {
  display: ${props => props.display || 'flex'};

}
`

const SubHeader = enhance(({
  showMenu, toggleMenu
}) => {
  return (
    <Root>
      <GridCustom container direction={'row'} justify="center" alignItems={'center'} spacing={0}>

        <Grid item xs={11}>

          <Grid container alignItems="stretch" direction="row" justify="space-between"
                style={{ position: 'relative', height: '25px' }}>

            <Grid item xs={2} sm={4}>

              <Hidden smDown>
                <IconLogoWrap style={{ fontSize: '221px' }}>
                  <IconLogo coloricon="#4a4a4a"/>
                </IconLogoWrap>
              </Hidden>

              <Hidden mdUp>
                <ContainerIcon pose={!showMenu ? 'show' : 'hide'} display={!showMenu ? 'flex' : 'none'} >
                    <ButtonBase disableRipple={true} disableTouchRipple={true}  onClick={toggleMenu}>
                      <IconMenu/>
                    </ButtonBase>
                </ContainerIcon>
                <ContainerIcon pose={showMenu ? 'show' : 'hide'} display={showMenu ? 'flex' : 'none'} >
                    <ButtonBase style={{color: '#4a4a4a'}} disableRipple={true} disableTouchRipple={true}  onClick={toggleMenu}>
                      <Clear color="inherit" style={{fontSize: 30}}/>
                    </ButtonBase>
                </ContainerIcon>
              </Hidden>

            </Grid>


            <Grid item xs={8} sm={6}>

              <Hidden mdUp>
                <IconLogoWrap style={{ fontSize: '221px' }}>
                  <IconLogo coloricon="#4a4a4a"/>
                </IconLogoWrap>
              </Hidden>

              <Hidden smDown>
                <Grid container direction={'row'} justify="space-between" alignItems={'center'} spacing={0}>
                  {['shop', 'subscription', 'our story'].map((value, index) => (
                    <Grid key={index} item xs={3}>
                      <ButtonMenu>
                        {value}
                      </ButtonMenu>
                    </Grid>
                  ))}
                </Grid>
              </Hidden>

            </Grid>

            <Grid item xs={2} style={{ textAlign: 'right' }}>
              <IconCart/>
            </Grid>


          </Grid>
        </Grid>
      </GridCustom>

      <Hidden mdUp>
        <BurgerMenu showMenu={showMenu} />
      </Hidden>
          
    </Root>
  )
})

export default SubHeader;