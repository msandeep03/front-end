import React, {Component} from 'react'
import {withStyles, Grid} from '@material-ui/core';
import compose from 'recompose/compose'

import {
  ButtonHeader,
  Title,
  TagLine,
  mediaGrid
} from '../../customUI';
import {rem} from 'polished'
import styled from 'styled-components'

const Occasion = styled(({ bgurl, ...other }) => (
  <Grid {...other} />
))`
&& {
  color: ${props => props.color};
  text-align: center;
  background-image: url(${props => props.bgurl});
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;

  button {
    margin-bottom: ${rem(41)};
  }
  
  .Top {
    height: 48%;
  }
  .Bottom {
    height: 52%;
  }
  
  .TagLine {
    padding: 0 1em;
  }

  height: ${rem(720)};
  margin: 0 auto;
 
  ${mediaGrid(`xl`)}{//lg d
    width: 100%;
    height: ${rem(720)};
  }
  ${mediaGrid(`lg`)}{//sm d
    width: 100%;
    height: ${rem(720)};
  }
  ${mediaGrid(`md`)}{//tablet
    width: 80%;
    height: ${rem(720)};
  }
  ${mediaGrid(`sm`)}{//phone
    width: 100%;
    height: ${rem(720)};
    .Title {
      font-size: 1.2rem;
      white-space:nowrap;
    }
    .TagLine {
      font-size: 1.0rem;
    }

  }
}
`;

const styles = theme => ({});

const enhance = compose();

const OccasionItem = enhance(({
  bgurl, title, description, button
}) => {
  return (
    <Grid item xs={9} sm={7} md={4}>

      <Occasion container direction="column" justify="space-between" alignItems="center" spacing={0} bgurl={bgurl} color="#fff">
            <Grid item>
              &nbsp;
            </Grid>
            <Grid item>
              <Title className={'Title'} size="1.875rem" fweight="700" color="#fff" transform="uppercase"
                     margin="0 auto">
                {title}
              </Title>
            </Grid>
            <Grid item>
              <TagLine className={'TagLine'} margin="0 auto" color="#fff" fweight="300" size="1.25rem">
                {description}
              </TagLine>
            </Grid>
            <Grid item justify="center" container>
              <ButtonHeader variant="contained">
                {button}
              </ButtonHeader>
            </Grid>
      </Occasion>
    </Grid>

  )
})
export default withStyles(styles)(OccasionItem)