import React, { Component } from 'react'
import compose              from 'recompose/compose'
import defaultProps         from 'recompose/defaultProps'
import withHandlers         from 'recompose/withHandlers'
import withPropsOnChange    from 'recompose/withPropsOnChange'
import withStateHandlers    from 'recompose/withStateHandlers'
import lifecycle            from 'recompose/lifecycle'

import * as PIXI            from 'pixi.js'
import * as THREE           from 'three'


import Context              from '../../scene/all/Context'


const enhance = compose(
  defaultProps({
    canvas: null,
    x: 0,
    y: 0,
    z: 0,
    width: 50,
    height: 50,
  }),
  withStateHandlers(
    () => ({
      geometry: null,
      instance: null,
      texture: null,
    }),
    {
      geometrySet: () => (geometry) => ({ geometry }),
      instanceSet: () => (instance) => ({ instance }),
      textureSet: () => (texture) => ({ texture }),
    }
  ),
  withPropsOnChange(
    ['x', 'y', 'z'],
    ({ instance, x, y, z }) => {
      if (instance) {
        instance.position.set(x, y, z)
      }
    }
  ),
  withHandlers({
    animate: ({ texture }) => () => {
      texture.needsUpdate = true
    }
  }),  
  withHandlers({
    mount: ({
    }) => () => {

    },
    update: ({
      animate,
      fromScene,
      geometrySet,
      instance, instanceSet,
      canvas,
      textureSet,
      x, y, z,
      width, height,

      onInstanceChange,
    }) => () => {
      if (canvas && !instance) {
        const { animateAdd, scene } = fromScene

        const texture = new THREE.Texture(canvas)
        texture.minFilter = THREE.LinearFilter
        texture.magFilter = THREE.LinearFilter

        texture.needsUpdate = true

        const material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide })
        const geometry = new THREE.PlaneGeometry(width, height)
        const instance = new THREE.Mesh(geometry, material)
        instance.position.set(x, y, z)

        scene.add(instance)

        instanceSet(instance)
        geometrySet(geometry)
        textureSet(texture)
        animateAdd(animate)

        onInstanceChange && onInstanceChange(instance)
      }
    }
  }),
  lifecycle({
    componentDidMount() {
      this.props.mount()
    },
    componentDidUpdate() {
      this.props.update()
    }
  }),
)

const Plane3d = enhance(({
  canvasSet,
}) => {
  return null
})

export default (props) => {
  return (
    <Context.Consumer>
      {(context) => (
        <Plane3d {...props} fromScene={context} />
      )}
    </Context.Consumer>
  )
}