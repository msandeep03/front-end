import React, { Component } from 'react'
import compose              from 'recompose/compose'
import defaultProps         from 'recompose/defaultProps'
import withHandlers         from 'recompose/withHandlers'
import withPropsOnChange    from 'recompose/withPropsOnChange'
import withStateHandlers    from 'recompose/withStateHandlers'
import lifecycle            from 'recompose/lifecycle'

import * as THREE           from 'three'


import withScene            from '../../scene/all/withScene'


const enhance = compose(
  withScene(),
  defaultProps({
    color: 0xffffff,
    position: new THREE.Vector3(0, 0, 0),
    width: 1,
    height: 1,
  }),
  withStateHandlers(
    () => ({
      instance: null,
    }),
    {
      instanceSet: () => (instance) => ({ instance }),
    }
  ),
  withPropsOnChange(
    ['color'],
    ({ instance, color }) => {
      if (instance) {
        instance.material.color.setHex(color)
      }
    }
  ),  
  withPropsOnChange(
    ['position'],
    ({ instance, position }) => {
      if (instance) {
        instance.position.copy(position)
      }
    }
  ),
  withPropsOnChange(
    ['width', 'height'],
    ({ instance, width, height }) => {
      if (instance) {
        instance.scale.set(width, height, 1)
      }
    }
  ),
  withHandlers({
    mount: ({
      color,
      fromScene,
      instanceSet,
      position,
      src,
      width, height,
    }) => () => {
      const { scene } = fromScene

      const textureLoader = new THREE.TextureLoader()
      textureLoader.load(src, (texture) => {
        const material = new THREE.SpriteMaterial({ map: texture, color })
				const instance = new THREE.Sprite(material)
        instance.position.copy(position)
				instance.center.set(0.5, 0.5)
				instance.scale.set(width, height, 1)
				scene.add(instance)

        instanceSet(instance)
      })
    },
    update: () => () => {
    },
    unmount: ({ instance, fromScene }) => () => {
      fromScene.scene.remove(instance)
    }
  }),
  lifecycle({
    componentDidMount() {
      this.props.mount()
    },
    componentWillUnmount() {
      this.props.unmount()
    }
  }),
)

const Point3d = enhance(() => null)

export default Point3d